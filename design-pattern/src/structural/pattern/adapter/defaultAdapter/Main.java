package structural.pattern.adapter.defaultAdapter;

/*
缺省适配器

最小接口原则：接口的行为应该尽量的少。
如果不遵守这个原则，结果就是实现这个接口的子类出现很多空方法，而且根本用不上这个方法的情况。但由于JAVA语言规则的原因，实现一个接口必须实现它的全部方法，所以
我们的子类不得不被迫写一堆空方法在那，只为了编译通过。

一般是为了弥补接口过大所犯下的过错，但是也请注意衡量利弊，权衡好以后再考虑是否要使用缺省适配器。

三种适配器区别
1：类适配器，一般是针对适配目标是接口的情况下使用。
2：对象适配器，一般是针对适配目标是类或者是需要复用的对象多于一个的时候使用，这里再专门提示一下，对象适配器有时候是为了将多个类一起适配，
                              所以才不得不使用组合的方式，而且我们采用对象适配器的时候，继承也不是必须的，而是根据实际的类之间的关系来进行处理。
3：缺省适配器，一般是为了弥补接口过大所犯下的过错，但是也请注意衡量利弊，权衡好以后再考虑是否要使用缺省适配器。

 */
public class Main {
	public static void main(String[] args) {
		User user = new User();
		user.fun2();
		user.fun7();
	}
}
